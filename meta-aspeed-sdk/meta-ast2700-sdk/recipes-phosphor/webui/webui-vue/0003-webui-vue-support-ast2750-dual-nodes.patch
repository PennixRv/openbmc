From de16aa85db4caf0de4074d4edcc730d9adc4015e Mon Sep 17 00:00:00 2001
From: VinceChang6637 <vince_chang@aspeedtech.com>
Date: Wed, 29 Nov 2023 13:08:42 +0800
Subject: [PATCH 3/3] webui-vue: support ast2750 dual nodes.

1. Add KVM1 page.
2. Add Host1 Virtual Media device.

Signed-off-by: VinceChang6637 <vince_chang@aspeedtech.com>
---
 src/assets/styles/bmc/custom/_index.scss      |   1 +
 src/assets/styles/bmc/custom/_kvm1.scss       |  12 ++
 .../AppNavigation/AppNavigationMixin.js       |   5 +
 src/env/components/AppNavigation/intel.js     |   5 +
 src/env/router/intel.js                       |  18 ++
 src/locales/en-US.json                        |  18 +-
 src/router/routes.js                          |  18 ++
 .../modules/Operations/VirtualMediaStore.js   |  21 ++
 src/views/Operations/Kvm1/Kvm1.vue            |  24 +++
 src/views/Operations/Kvm1/Kvm1Console.vue     | 190 ++++++++++++++++++
 src/views/Operations/Kvm1/index.js            |   2 +
 .../Operations/VirtualMedia/VirtualMedia.vue  |  67 ++++++
 12 files changed, 379 insertions(+), 2 deletions(-)
 create mode 100644 src/assets/styles/bmc/custom/_kvm1.scss
 create mode 100644 src/views/Operations/Kvm1/Kvm1.vue
 create mode 100644 src/views/Operations/Kvm1/Kvm1Console.vue
 create mode 100644 src/views/Operations/Kvm1/index.js

diff --git a/src/assets/styles/bmc/custom/_index.scss b/src/assets/styles/bmc/custom/_index.scss
index 74594e3..9b72699 100644
--- a/src/assets/styles/bmc/custom/_index.scss
+++ b/src/assets/styles/bmc/custom/_index.scss
@@ -10,6 +10,7 @@
 @import "./dropdown";
 @import "./forms";
 @import "./kvm";
+@import "./kvm1";
 @import "./modal";
 @import "./pagination";
 @import "./section-divider";
diff --git a/src/assets/styles/bmc/custom/_kvm1.scss b/src/assets/styles/bmc/custom/_kvm1.scss
new file mode 100644
index 0000000..a722384
--- /dev/null
+++ b/src/assets/styles/bmc/custom/_kvm1.scss
@@ -0,0 +1,12 @@
+#terminal-kvm {
+  height: calc(100vh - 300px);
+  display: flex;
+  &.full-window {
+   height: calc(100vh - 80px); 
+  }
+  div:nth-child(1) {
+    background: transparent !important;
+    display: block !important;
+    overflow: hidden !important;
+  }
+}
\ No newline at end of file
diff --git a/src/components/AppNavigation/AppNavigationMixin.js b/src/components/AppNavigation/AppNavigationMixin.js
index 6123098..4afac29 100644
--- a/src/components/AppNavigation/AppNavigationMixin.js
+++ b/src/components/AppNavigation/AppNavigationMixin.js
@@ -82,6 +82,11 @@ const AppNavigationMixin = {
               label: this.$t('appNavigation.kvm'),
               route: '/operations/kvm',
             },
+            {
+              id: 'kvm1',
+              label: this.$t('appNavigation.kvm1'),
+              route: '/operations/kvm1',
+            },
             {
               id: 'key-clear',
               label: this.$t('appNavigation.keyClear'),
diff --git a/src/env/components/AppNavigation/intel.js b/src/env/components/AppNavigation/intel.js
index 0688a05..15ac27a 100644
--- a/src/env/components/AppNavigation/intel.js
+++ b/src/env/components/AppNavigation/intel.js
@@ -78,6 +78,11 @@ const AppNavigationMixin = {
               label: this.$t('appNavigation.kvm'),
               route: '/operations/kvm',
             },
+            {
+              id: 'kvm1',
+              label: this.$t('appNavigation.kvm1'),
+              route: '/operations/kvm1',
+            },
             {
               id: 'firmware',
               label: this.$t('appNavigation.firmware'),
diff --git a/src/env/router/intel.js b/src/env/router/intel.js
index 5f3ee6e..0c9781c 100644
--- a/src/env/router/intel.js
+++ b/src/env/router/intel.js
@@ -8,6 +8,8 @@ import Firmware from '@/views/Operations/Firmware';
 import Inventory from '@/views/HardwareStatus/Inventory';
 import Kvm from '@/views/Operations/Kvm';
 import KvmConsole from '@/views/Operations/Kvm/KvmConsole';
+import Kvm1 from '@/views/Operations/Kvm1';
+import Kvm1Console from '@/views/Operations/Kvm1/Kvm1Console';
 import UserManagement from '@/views/SecurityAndAccess/UserManagement';
 import Login from '@/views/Login';
 import LoginLayout from '@/layouts/LoginLayout';
@@ -81,6 +83,14 @@ const routes = [
           title: i18n.t('appPageTitle.kvm'),
         },
       },
+      {
+        path: 'kvm1',
+        name: 'kvm1-console',
+        component: Kvm1Console,
+        meta: {
+          title: i18n.t('appPageTitle.kvm1'),
+        },
+      },
     ],
   },
   {
@@ -186,6 +196,14 @@ const routes = [
           title: i18n.t('appPageTitle.kvm'),
         },
       },
+      {
+        path: '/operations/kvm1',
+        name: 'kvm1',
+        component: Kvm1,
+        meta: {
+          title: i18n.t('appPageTitle.kvm1'),
+        },
+      },
       {
         path: '/operations/firmware',
         name: 'firmware',
diff --git a/src/locales/en-US.json b/src/locales/en-US.json
index ff10769..b9fae4c 100644
--- a/src/locales/en-US.json
+++ b/src/locales/en-US.json
@@ -115,6 +115,7 @@
         "hardwareStatus": "Hardware status",
         "inventory": "@:appPageTitle.inventory",
         "kvm": "@:appPageTitle.kvm",
+        "kvm1": "@:appPageTitle.kvm1",
         "ldap": "@:appPageTitle.ldap",
         "logs": "Logs",
         "userManagement": "@:appPageTitle.userManagement",
@@ -144,6 +145,7 @@
         "firmware": "Firmware",
         "inventory": "Inventory and LEDs",
         "kvm": "KVM",
+        "kvm1": "KVM1",
         "ldap": "LDAP",
         "userManagement": "User management",
         "login": "Login",
@@ -492,6 +494,14 @@
         "connecting": "Connecting",
         "disconnected": "Disconnected"
     },
+    "pageKvm1": {
+        "openNewTab": "Open in new tab",
+        "buttonCtrlAltDelete": "Send Ctrl+Alt+Delete",
+        "status": "Status",
+        "connected": "Connected",
+        "connecting": "Connecting",
+        "disconnected": "Disconnected"
+    },
     "pageLdap": {
         "pageDescription": "Configure LDAP settings and manage role groups",
         "roleGroups": "Role groups",
@@ -951,7 +961,8 @@
     },
     "pageVirtualMedia": {
         "configureConnection": "Configure Connection",
-        "defaultDeviceName": "Virtual media device",
+        "defaultDeviceName": "Host0 Virtual media device",
+        "defaultDeviceName1": "Host1 Virtual media device",
         "start": "Start",
         "stop": "Stop",
         "virtualMediaSubTitleFirst": "Load image from web browser",
@@ -969,7 +980,10 @@
             "serverRunning": "Server running",
             "serverConnectionEstablished": "Server connection established",
             "serverClosedSuccessfully": "Server closed successfully",
-            "serverClosedWithErrors": "Server closed with errors"
+            "serverClosedWithErrors": "Server closed with errors",
+            "serverRunning1": "Host1 Server running",
+            "serverClosedSuccessfully1": "Host1 Server closed successfully",
+            "serverClosedWithErrors1": "Host1 Server closed with errors"
         }
     },
     "countries": {
diff --git a/src/router/routes.js b/src/router/routes.js
index 4cf8d72..bd3b4c7 100644
--- a/src/router/routes.js
+++ b/src/router/routes.js
@@ -8,6 +8,8 @@ import Firmware from '@/views/Operations/Firmware';
 import Inventory from '@/views/HardwareStatus/Inventory';
 import Kvm from '@/views/Operations/Kvm';
 import KvmConsole from '@/views/Operations/Kvm/KvmConsole';
+import Kvm1 from '@/views/Operations/Kvm1';
+import Kvm1Console from '@/views/Operations/Kvm1/Kvm1Console';
 import Sessions from '../views/SecurityAndAccess/Sessions';
 import Ldap from '@/views/SecurityAndAccess/Ldap';
 import UserManagement from '@/views/SecurityAndAccess/UserManagement';
@@ -85,6 +87,14 @@ const routes = [
           title: i18n.t('appPageTitle.kvm'),
         },
       },
+      {
+        path: 'kvm1',
+        name: 'kvm1-console',
+        component: Kvm1Console,
+        meta: {
+          title: i18n.t('appPageTitle.kvm1'),
+        },
+      },
     ],
   },
   {
@@ -214,6 +224,14 @@ const routes = [
           title: i18n.t('appPageTitle.kvm'),
         },
       },
+      {
+        path: '/operations/kvm1',
+        name: 'kvm1',
+        component: Kvm1,
+        meta: {
+          title: i18n.t('appPageTitle.kvm1'),
+        },
+      },
       {
         path: '/operations/firmware',
         name: 'firmware',
diff --git a/src/store/modules/Operations/VirtualMediaStore.js b/src/store/modules/Operations/VirtualMediaStore.js
index 3ae08a1..ef0775e 100644
--- a/src/store/modules/Operations/VirtualMediaStore.js
+++ b/src/store/modules/Operations/VirtualMediaStore.js
@@ -17,16 +17,20 @@ const VirtualMediaStore = {
   namespaced: true,
   state: {
     proxyDevices: [],
+    proxyDevices1: [],
     legacyDevices: [],
     connections: [],
   },
   getters: {
     proxyDevices: (state) => state.proxyDevices,
+    proxyDevices1: (state) => state.proxyDevices1,
     legacyDevices: (state) => state.legacyDevices,
   },
   mutations: {
     setProxyDevicesData: (state, deviceData) =>
       (state.proxyDevices = deviceData),
+    setProxyDevices1Data: (state, deviceData) =>
+      (state.proxyDevices1 = deviceData),
     setLegacyDevicesData: (state, deviceData) =>
       (state.legacyDevices = deviceData),
   },
@@ -44,7 +48,15 @@ const VirtualMediaStore = {
           transferProtocolType: transferProtocolType.OEM,
           isActive: false,
         };
+        const device1 = {
+          id: i18n.t('pageVirtualMedia.defaultDeviceName1'),
+          websocket: '/vm/1/0',
+          file: null,
+          transferProtocolType: transferProtocolType.OEM,
+          isActive: false,
+        };
         commit('setProxyDevicesData', [device]);
+        commit('setProxyDevices1Data', [device1]);
         return;
       }
 
@@ -72,6 +84,14 @@ const VirtualMediaStore = {
                 file: null,
               };
             });
+          const proxyDevices1 = deviceData
+            .filter((d) => d.transferProtocolType === transferProtocolType.OEM)
+            .map((device) => {
+              return {
+                ...device,
+                file: null,
+              };
+            });
           const legacyDevices = deviceData
             .filter((d) => d.transferProtocolType !== transferProtocolType.OEM)
             .map((device) => {
@@ -84,6 +104,7 @@ const VirtualMediaStore = {
               };
             });
           commit('setProxyDevicesData', proxyDevices);
+          commit('setProxyDevices1Data', proxyDevices1);
           commit('setLegacyDevicesData', legacyDevices);
         })
         .catch((error) => {
diff --git a/src/views/Operations/Kvm1/Kvm1.vue b/src/views/Operations/Kvm1/Kvm1.vue
new file mode 100644
index 0000000..1593a51
--- /dev/null
+++ b/src/views/Operations/Kvm1/Kvm1.vue
@@ -0,0 +1,24 @@
+<template>
+  <b-container fluid="xl">
+    <page-title />
+    <div class="terminal-container">
+      <kvm1-console :is-full-window="false" />
+    </div>
+  </b-container>
+</template>
+
+<script>
+import PageTitle from '@/components/Global/PageTitle';
+import Kvm1Console from './Kvm1Console';
+
+export default {
+  name: 'Kvm1',
+  components: { PageTitle, Kvm1Console },
+};
+</script>
+
+<style scoped>
+.terminal-container {
+  width: 100%;
+}
+</style>
diff --git a/src/views/Operations/Kvm1/Kvm1Console.vue b/src/views/Operations/Kvm1/Kvm1Console.vue
new file mode 100644
index 0000000..6805352
--- /dev/null
+++ b/src/views/Operations/Kvm1/Kvm1Console.vue
@@ -0,0 +1,190 @@
+<template>
+  <div :class="marginClass">
+    <div ref="toolbar" class="kvm-toolbar">
+      <b-row class="d-flex">
+        <b-col class="d-flex flex-column justify-content-end" cols="4">
+          <dl class="mb-2" sm="2" md="2">
+            <dt class="d-inline font-weight-bold mr-1">
+              {{ $t('pageKvm1.status') }}:
+            </dt>
+            <dd class="d-inline">
+              <status-icon :status="serverStatusIcon" />
+              <span class="d-none d-md-inline"> {{ serverStatus }}</span>
+            </dd>
+          </dl>
+        </b-col>
+
+        <b-col class="d-flex justify-content-end pr-1">
+          <b-button
+            v-if="isConnected"
+            variant="link"
+            type="button"
+            @click="sendCtrlAltDel"
+          >
+            <icon-arrow-down />
+            {{ $t('pageKvm1.buttonCtrlAltDelete') }}
+          </b-button>
+          <b-button
+            v-if="!isFullWindow"
+            variant="link"
+            type="button"
+            @click="openConsoleWindow()"
+          >
+            <icon-launch />
+            {{ $t('pageKvm1.openNewTab') }}
+          </b-button>
+        </b-col>
+      </b-row>
+    </div>
+    <div id="terminal-kvm" ref="panel" :class="terminalClass"></div>
+  </div>
+</template>
+
+<script>
+import RFB from '@novnc/novnc/core/rfb';
+import StatusIcon from '@/components/Global/StatusIcon';
+import IconLaunch from '@carbon/icons-vue/es/launch/20';
+import IconArrowDown from '@carbon/icons-vue/es/arrow--down/16';
+import { throttle } from 'lodash';
+
+const Connecting = 0;
+const Connected = 1;
+const Disconnected = 2;
+
+export default {
+  name: 'Kvm1Console',
+  components: { StatusIcon, IconLaunch, IconArrowDown },
+  props: {
+    isFullWindow: {
+      type: Boolean,
+      default: true,
+    },
+  },
+  data() {
+    return {
+      rfb: null,
+      isConnected: false,
+      terminalClass: this.isFullWindow ? 'full-window' : '',
+      marginClass: this.isFullWindow ? 'margin-left-full-window' : '',
+      status: Connecting,
+      convasRef: null,
+      resizeKvmWindow: null,
+    };
+  },
+  computed: {
+    serverStatusIcon() {
+      if (this.status === Connected) {
+        return 'success';
+      } else if (this.status === Disconnected) {
+        return 'danger';
+      }
+      return 'secondary';
+    },
+    serverStatus() {
+      if (this.status === Connected) {
+        return this.$t('pageKvm1.connected');
+      } else if (this.status === Disconnected) {
+        return this.$t('pageKvm1.disconnected');
+      }
+      return this.$t('pageKvm1.connecting');
+    },
+  },
+  created() {
+    this.$store.dispatch('global/getSystemInfo');
+  },
+  mounted() {
+    this.openTerminal();
+  },
+  beforeDestroy() {
+    window.removeEventListener('resize', this.resizeKvmWindow);
+    this.closeTerminal();
+  },
+  methods: {
+    sendCtrlAltDel() {
+      this.rfb.sendCtrlAltDel();
+    },
+    closeTerminal() {
+      this.rfb.disconnect();
+      this.rfb = null;
+    },
+    openTerminal() {
+      const token = this.$store.getters['authentication/token'];
+      this.rfb = new RFB(
+        this.$refs.panel,
+        `wss://${window.location.host}/kvm/1`,
+        { wsProtocols: [token] }
+      );
+
+      this.rfb.scaleViewport = true;
+      this.rfb.clipViewport = true;
+      const that = this;
+
+      this.resizeKvmWindow = throttle(() => {
+        setTimeout(that.setWidthToolbar, 0);
+      }, 1000);
+      window.addEventListener('resize', this.resizeKvmWindow);
+
+      this.rfb.addEventListener('connect', () => {
+        that.isConnected = true;
+        that.status = Connected;
+        that.setWidthToolbar();
+      });
+
+      this.rfb.addEventListener('disconnect', () => {
+        this.isConnected = false;
+        that.status = Disconnected;
+      });
+    },
+    setWidthToolbar() {
+      if (
+        this.$refs.panel.children &&
+        this.$refs.panel.children.length > 0 &&
+        this.$refs.panel.children[0].children.length > 0
+      ) {
+        this.$refs.toolbar.style.width =
+          this.$refs.panel.children[0].children[0].clientWidth - 10 + 'px';
+      }
+    },
+    openConsoleWindow() {
+      // If consoleWindow is not null
+      // Check the newly opened window is closed or not
+      if (this.$eventBus.$consoleWindow) {
+        // If window is not closed set focus to new window
+        // If window is closed, do open new window
+        if (!this.$eventBus.$consoleWindow.closed) {
+          this.$eventBus.$consoleWindow.focus();
+          return;
+        } else {
+          this.openNewWindow();
+        }
+      } else {
+        // If consoleWindow is null, open new window
+        this.openNewWindow();
+      }
+    },
+    openNewWindow() {
+      this.$eventBus.$consoleWindow = window.open(
+        '#/console/kvm1',
+        'kvmConsoleWindow',
+        'directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=yes,width=700,height=550'
+      );
+    },
+  },
+};
+</script>
+
+<style scoped lang="scss">
+.button-ctrl-alt-delete {
+  float: right;
+}
+
+.kvm-status {
+  padding-top: $spacer / 2;
+  padding-left: $spacer / 4;
+  display: inline-block;
+}
+
+.margin-left-full-window {
+  margin-left: 5px;
+}
+</style>
diff --git a/src/views/Operations/Kvm1/index.js b/src/views/Operations/Kvm1/index.js
new file mode 100644
index 0000000..f309220
--- /dev/null
+++ b/src/views/Operations/Kvm1/index.js
@@ -0,0 +1,2 @@
+import Kvm1 from './Kvm1.vue';
+export default Kvm1;
diff --git a/src/views/Operations/VirtualMedia/VirtualMedia.vue b/src/views/Operations/VirtualMedia/VirtualMedia.vue
index 80dff5b..0270b55 100644
--- a/src/views/Operations/VirtualMedia/VirtualMedia.vue
+++ b/src/views/Operations/VirtualMedia/VirtualMedia.vue
@@ -39,6 +39,39 @@
               </b-button>
             </b-col>
           </b-row>
+          <b-row>
+            <b-col v-for="(dev, $index) in proxyDevices1" :key="$index" md="6">
+              <b-form-group :label="dev.id" label-class="bold">
+                <form-file
+                  v-if="!dev.isActive"
+                  :id="concatId(dev.id)"
+                  v-model="dev.file"
+                >
+                  <template #invalid>
+                    <b-form-invalid-feedback role="alert">
+                      {{ $t('global.form.required') }}
+                    </b-form-invalid-feedback>
+                  </template>
+                </form-file>
+              </b-form-group>
+              <b-button
+                v-if="!dev.isActive"
+                variant="primary"
+                :disabled="!dev.file"
+                @click="startVM1(dev)"
+              >
+                {{ $t('pageVirtualMedia.start') }}
+              </b-button>
+              <b-button
+                v-if="dev.isActive"
+                variant="primary"
+                :disabled="!dev.file"
+                @click="stopVM1(dev)"
+              >
+                {{ $t('pageVirtualMedia.stop') }}
+              </b-button>
+            </b-col>
+          </b-row>
         </page-section>
       </b-col>
     </b-row>
@@ -122,6 +155,9 @@ export default {
     proxyDevices() {
       return this.$store.getters['virtualMedia/proxyDevices'];
     },
+    proxyDevices1() {
+      return this.$store.getters['virtualMedia/proxyDevices1'];
+    },
     legacyDevices() {
       return this.$store.getters['virtualMedia/legacyDevices'];
     },
@@ -166,6 +202,37 @@ export default {
     stopVM(device) {
       device.nbd.stop();
     },
+    startVM1(device) {
+      const token = this.$store.getters['authentication/token'];
+      device.nbd = new NbdServer(
+        `wss://${window.location.host}${device.websocket}`,
+        device.file,
+        device.id,
+        token
+      );
+      device.nbd.socketStarted = () =>
+        this.successToast(this.$t('pageVirtualMedia.toast.serverRunning1'));
+      device.nbd.errorReadingFile = () =>
+        this.errorToast(this.$t('pageVirtualMedia.toast.errorReadingFile'));
+      device.nbd.socketClosed = (code2) => {
+        if (code2 === 1000)
+          this.successToast(
+            this.$t('pageVirtualMedia.toast.serverClosedSuccessfully1')
+          );
+        else
+          this.errorToast(
+            this.$t('pageVirtualMedia.toast.serverClosedWithErrors')
+          );
+        device.file = null;
+        device.isActive = false;
+      };
+
+      device.nbd.start();
+      device.isActive = true;
+    },
+    stopVM1(device) {
+      device.nbd.stop();
+    },
     startLegacy(connectionData) {
       var data = {};
       data.Image = connectionData.serverUri;
-- 
2.34.1

